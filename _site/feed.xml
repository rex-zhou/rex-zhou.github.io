<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reactor</title>
    <description>Hacker, Math, Trading?
</description>
    <link>http://rex-zhou.github.io/</link>
    <atom:link href="http://rex-zhou.github.io/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 01 Mar 2016 23:38:21 +0800</pubDate>
    <lastBuildDate>Tue, 01 Mar 2016 23:38:21 +0800</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>What is blockchain</title>
        <description>&lt;p&gt;We often heard some news like “xxx is building a xxx powered by the block chain.” or “xxx bank is working on block chain”. Suddenly the word ‘block chain’ becomes a very popular like “Justin Bieber”. To make you have a basic image for such technology this article just give you some brief about it.&lt;/p&gt;

&lt;p&gt;A block chain is a technology comes from the Bitcoin world. The Bitcoin is a decentralized digital asset and payment system invented by &lt;a href=&quot;https://en.wikipedia.org/wiki/Satoshi_Nakamoto&quot;&gt;Satoshi Nakamoto&lt;/a&gt; published in 2008. All the bitcoin’s transactions are verified by network nodes and recorded in a public distributed ledger which is called the &lt;code class=&quot;highlighter-rouge&quot;&gt;block chain&lt;/code&gt;. You can think the block chain is a transaction database which recorded all the transaction executed in the currency.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://rex-zhou.github.io/assets/Bitcoin_Block_Data.png&quot; alt=&quot;Some pics for the blockchain&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From the pic above you can refer that every block contains a hash of the previous block. This has the effect of creating a chain of blocks from the &lt;a href=&quot;https://en.bitcoin.it/wiki/Genesis_block&quot;&gt;genesis block&lt;/a&gt; to the current block. Each block is guaranteed to come after the previous block chronologically because the previous block’s hash would otherwise not be known. Each block is also computationally impractical to modify once it has been in the chain for a while because every block after it would also have to be regenerated.&lt;/p&gt;

&lt;p&gt;Here’re some key factors that make the block chain technology attractive and possible widely use.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Decentralised nature.&lt;/li&gt;
  &lt;li&gt;Transparency.&lt;/li&gt;
  &lt;li&gt;Immutablility.&lt;/li&gt;
  &lt;li&gt;Cost.&lt;/li&gt;
  &lt;li&gt;Speed.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;From those characteristics above this technology can be very useful for financial services. There’s some alternative chain using the block chain algorithm to achieve distributed consensus on a particular topic. Those chains have been suggested as ways to implement DNS, P2P currency exchanges, SSL certificate authorities, timestamping, file storage and voting systems.&lt;/p&gt;

&lt;p&gt;The elegance of the block chain is that it obviates the need for a central authority to verify trust and the transfer of value. The mechanics of the it are novel and highly disruptive. Once a transaction occured a public record of all transactions is automatically created. Every node can verify each transaction by the algorithm to confirm the transaction and create a historical ledger of all activity.&lt;/p&gt;

&lt;p&gt;We have looked at what a block chain might or might not be, and perhaps seen some hints of what it might enable. The technology that underpins bitcoin can be used to build many things.&lt;/p&gt;

&lt;h4 id=&quot;useful-reference&quot;&gt;Useful reference&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://bitcoin.org/bitcoin.pdf&quot;&gt;Bitcoin white paper&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://en.bitcoin.it/wiki/Main_Page&quot;&gt;Bitcoin wiki&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://bitcoin.org/en/&quot;&gt;Bitcoin org&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.coinbase.com/&quot;&gt;Bitcoin trading&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 01 Mar 2016 18:30:00 +0800</pubDate>
        <link>http://rex-zhou.github.io/2016/03/01/what-is-blockchain.html</link>
        <guid isPermaLink="true">http://rex-zhou.github.io/2016/03/01/what-is-blockchain.html</guid>
        
        
      </item>
    
      <item>
        <title>To design a better API</title>
        <description>&lt;p&gt;Recently just finished a small project from API design to the whole progress processing. The API part built on the legacy system and followed by the guide of the original design. All the function included in the API module just to build an complex value object and pass to our system by the transport layer. The transport layer provides socket and MOM(&lt;a href=&quot;https://en.wikipedia.org/wiki/Message-oriented_middleware&quot;&gt;Message Oriented Middleware&lt;/a&gt;) 2 communication ways. To reduce the cost of development between different team it is necessary to design a good API.&lt;/p&gt;

&lt;h1 id=&quot;api-is-the-language-you-talk-with-others&quot;&gt;API is the language you talk with others&lt;/h1&gt;
&lt;p&gt;Other system will access your system by calling your API. So the API should be easy to use and avoid to misuse even without documentation. It always plays as a contract to make agreement. The API user will understand what they could do and how to do thing in the right way.&lt;/p&gt;

&lt;p&gt;Here’s some characteristics of a good API. Some of them are from the &lt;a href=&quot;http://www.infoq.com/presentations/effective-api-design&quot;&gt;Effective API design&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Easy to learn and use&lt;/li&gt;
  &lt;li&gt;Easy to read and maintain&lt;/li&gt;
  &lt;li&gt;Easy to extend&lt;/li&gt;
  &lt;li&gt;Self explanation&lt;/li&gt;
  &lt;li&gt;Avoid misuse&lt;/li&gt;
  &lt;li&gt;Provide necessary feedback for the caller&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;general-design-principles&quot;&gt;General design principles&lt;/h1&gt;
&lt;p&gt;The API always implement as a prototype as write often with the spec growth. Make sure all of your codes published with an using example and unit tests in every iteration. Make your method a good name that can well explain the functionality.&lt;/p&gt;

&lt;h4 id=&quot;api-design-to-abstraction-rather-than-implementation&quot;&gt;API design to abstraction rather than implementation&lt;/h4&gt;
&lt;p&gt;If your API provides an interface as the standard of the function. Make sure all the implementation take zero impact to the API. Please do not add some additional step in the same methods. If really need to do some calculation or value assignment, put them in a special step. Remember API should do one thing and do it well.&lt;/p&gt;

&lt;h4 id=&quot;minimize-the-accessibility&quot;&gt;Minimize the accessibility&lt;/h4&gt;
&lt;p&gt;Make sure the classes and members as private as possible. Better to build an immutable object if you use a builder. If a class is public, limit the necessary access function. Do not use a setter method to init a variable.&lt;/p&gt;

&lt;h4 id=&quot;self-explanation&quot;&gt;Self explanation&lt;/h4&gt;
&lt;p&gt;There’s some annotation could be detected by some IDE could also provide function as documentation. Try to use the &lt;code class=&quot;highlighter-rouge&quot;&gt;@Nullable&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;@NotNull&lt;/code&gt; to mark a variable or a method. Then the user could do some check to avoid the &lt;code class=&quot;highlighter-rouge&quot;&gt;NullPointerException&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;To make the method calling much safer in concurrent environment. We advice you to use the concurrent annotation like below.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@ThreadSafe&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ConcurrentLinkedQueue&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;readWriteLock&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;nd&quot;&gt;@GuaredBy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;readWriteLock&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;offer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;E&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;queue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;offer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;elemnt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;using-appropriate-parameter-and-return-types&quot;&gt;Using appropriate parameter and return types&lt;/h4&gt;
&lt;p&gt;Prefer interface types to classes for input. And also use most specific possible input parameter type.
For example if you provide a assign method with the &lt;code class=&quot;highlighter-rouge&quot;&gt;List&lt;/code&gt; parameter as blow.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;setNameList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nameList&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//some code here&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If you assign the nameList with the implementation of &lt;code class=&quot;highlighter-rouge&quot;&gt;com.google.common.collect.ImmutableList&lt;/code&gt; which server side not contains. It will throw an exception of class not found.&lt;/p&gt;

&lt;h4 id=&quot;avoid-long-parameter-list&quot;&gt;Avoid long parameter list&lt;/h4&gt;
&lt;p&gt;Do not provide interface like below, it will bring mistake and confuse the user. If there’s no javadoc, user do not know how to input the params.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-java&quot; data-lang=&quot;java&quot;&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;queryIdBy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;arg5&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;//some code here&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;API design is really a challenge job, if you have better idea welcome to discuss with me:)&lt;/p&gt;
</description>
        <pubDate>Tue, 16 Feb 2016 18:30:00 +0800</pubDate>
        <link>http://rex-zhou.github.io/2016/02/16/api-design.html</link>
        <guid isPermaLink="true">http://rex-zhou.github.io/2016/02/16/api-design.html</guid>
        
        
      </item>
    
      <item>
        <title>Bye 2015!</title>
        <description>&lt;p&gt;This is really great year with so many surprise. Thanks all my friends. Happy new year!&lt;/p&gt;
</description>
        <pubDate>Fri, 01 Jan 2016 04:30:00 +0800</pubDate>
        <link>http://rex-zhou.github.io/2016/01/01/bye-2015.html</link>
        <guid isPermaLink="true">http://rex-zhou.github.io/2016/01/01/bye-2015.html</guid>
        
        
      </item>
    
      <item>
        <title>Front-end javascript testing with Mocha and Chai</title>
        <description>&lt;p&gt;As the &lt;a href=&quot;https://github.com/rex-zhou/Schemescript&quot;&gt;interpreter&lt;/a&gt; becomes more and more complex, testing the program in the textarea turns into an impossible mission. To test the javascript in HTML, better to separate the javascript file from the HTML file. But the javascript file could not be tested as the &lt;a href=&quot;https://nodejs.org&quot;&gt;Node&lt;/a&gt; file, you need to do a little small change to export the function you want to test.&lt;/p&gt;

&lt;p&gt;Your javascript file:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;use strict&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;myFunction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;})(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then you can import you function in your test class as blow:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&quot;use strict&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;assert&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myFunction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;script.js&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;myFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//The script.js is the file contains your function&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//Then you can test as a nodejs test case&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;myFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Congratulations, you now can test your front-end javascript in your unit test case. To make it more effective I recommend  Mocha and Chai as your testing framework.
You can find those two framework in below website.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://mochajs.org/&quot;&gt;Mocha&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://chaijs.com/&quot;&gt;Chai&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Both of the framework are available on npm.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;npm install mocha
&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;npm install chai&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Recommend adding them to &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; file using a &lt;code class=&quot;highlighter-rouge&quot;&gt;*&lt;/code&gt; as the version tag. This will ensure that you always have the most recent version.&lt;/p&gt;

&lt;h1 id=&quot;tesing-javascript-with-mocha&quot;&gt;Tesing javascript with Mocha&lt;/h1&gt;
&lt;p&gt;All the Mocha test case file should located in the &lt;code class=&quot;highlighter-rouge&quot;&gt;test&lt;/code&gt; folder. Then we could enhance the above test case with Mocha.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;s2&quot;&gt;&quot;use strict&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;assert&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myFunction&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;script.js&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;myFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//The script.js is the file contains your function&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;//We can easily add some description to it&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;myFunction(param1, param2)&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;should return 3 if param1 = 1, param2 = 2&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;myFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Run the &lt;code class=&quot;highlighter-rouge&quot;&gt;mocha&lt;/code&gt; command in your terminal, also you can add as a test command to your &lt;code class=&quot;highlighter-rouge&quot;&gt;package.json&lt;/code&gt; file. The result will print as below:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;myFunction&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;param1, param2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      ✓ should &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;3 &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;param1 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 1, param2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 2
1 passing &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1ms&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;If you want to assert an exception thrown by your function, you need to improve chai to your test cases.
Ok lets make the &lt;code class=&quot;highlighter-rouge&quot;&gt;myFunction&lt;/code&gt; throw an exception.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;param1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;param2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;isNaN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;param1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;isNaN&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;param2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;Param error&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;param1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;param2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then we add a test case for detect the exception:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;describe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;myFunction(param1, param2)&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;should return 3 if param1 = 1, param2 = 2&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;myFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;should throw an exception when param and param are not number&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;//here we use chai to assert the exception&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;assert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;equal&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;myFunction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;jack&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;rose&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Throw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Param error&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Run again the &lt;code class=&quot;highlighter-rouge&quot;&gt;mocha&lt;/code&gt; command in your terminal, as you see, the exception has been tested.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;myFunction&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;param1, param2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      ✓ should &lt;span class=&quot;k&quot;&gt;return &lt;/span&gt;3 &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;param1 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 1, param2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; 2
      ✓ should throw an exception when param and param are not number

2 passing &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1ms&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;To find more useful test function you can refer to the official document of Mocha and Chai, this should helpful to test your frond-end javascript:)&lt;/p&gt;
</description>
        <pubDate>Sun, 27 Dec 2015 06:30:00 +0800</pubDate>
        <link>http://rex-zhou.github.io/2015/12/27/tesing-javascript.html</link>
        <guid isPermaLink="true">http://rex-zhou.github.io/2015/12/27/tesing-javascript.html</guid>
        
        
      </item>
    
      <item>
        <title>A Simple Scheme interpreter!</title>
        <description>&lt;p&gt;This is a simple scheme interpreter for you to learn SICP, you can clone it from my &lt;a href=&quot;https://github.com/rex-zhou/Schemescript&quot;&gt;GitHub&lt;/a&gt; and open in your browser.&lt;/p&gt;

&lt;h1 id=&quot;what-is-a-language-interpreter&quot;&gt;What is a language interpreter?&lt;/h1&gt;
&lt;p&gt;A language interpreter has two parts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;1 Parsing:
The parsing component transform an input program from a sequence of character to an internal representation by some syntactic rules.&lt;/li&gt;
  &lt;li&gt;2 Execution:
The execution component will processing the internal representation to the real output by the semantic rules.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Here’s the working progress of a interpreter:&lt;/p&gt;

&lt;p&gt;program(string of file) -&amp;gt; parse -&amp;gt; AST(abstract syntax tree) -&amp;gt; eval -&amp;gt; output&lt;/p&gt;
</description>
        <pubDate>Sat, 19 Dec 2015 04:30:00 +0800</pubDate>
        <link>http://rex-zhou.github.io/2015/12/19/a-scheme-interpreter.html</link>
        <guid isPermaLink="true">http://rex-zhou.github.io/2015/12/19/a-scheme-interpreter.html</guid>
        
        
      </item>
    
      <item>
        <title>Groovy, please try!</title>
        <description>&lt;p&gt;For a java programmer sometimes need to write some POC program. The program changed often, sometimes you feel tired to move a lot of interfaces, factories, builders and services. Refactor takes a lot of time and also may create more structure class in your program. Under such situation you may want some dynamic feature for Java, but it is impossible. &lt;a href=&quot;http://www.groovy-lang.org/&quot;&gt;Groovy&lt;/a&gt; was birth for this. I really recommend you to try such programming language.&lt;/p&gt;

&lt;h1 id=&quot;how-to-install&quot;&gt;How to install&lt;/h1&gt;

&lt;p&gt;For window, you can visit &lt;a href=&quot;http://www.groovy-lang.org/download.html&quot;&gt;groovy download page&lt;/a&gt; to download. For Mac OSX, Linux  user better to use &lt;a href=&quot;http://sdkman.io/&quot;&gt;SDKMAN&lt;/a&gt; to download and configure any Groovy version of your choice. You may also need to install &lt;a href=&quot;https://grails.org/index.html&quot;&gt;Grails&lt;/a&gt; for web development, SDKMAN can also help you to handle it.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$curl&lt;/span&gt; -s get.sdkman.io | bash
&lt;span class=&quot;c&quot;&gt;#You need reopen a session&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$sdk&lt;/span&gt; install groovy
&lt;span class=&quot;c&quot;&gt;#Check if you successful installed it&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$groovy&lt;/span&gt; -version&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;your-first-program&quot;&gt;Your first program&lt;/h1&gt;

&lt;p&gt;Please open your favorite editor to input below code and save as &lt;code class=&quot;highlighter-rouge&quot;&gt;MyGroovyScript.groovy&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;n&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;Hello Groovy!&#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then in your command type&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;groovy MyGroovyScript.groovy&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You will see your screen prints &lt;code class=&quot;highlighter-rouge&quot;&gt;Hello Groovy!&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&quot;some-string-magic&quot;&gt;Some String magic&lt;/h1&gt;

&lt;p&gt;In groovy single quoted strings are plain &lt;code class=&quot;highlighter-rouge&quot;&gt;java.lang.String&lt;/code&gt; object. You can simple use &lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt; to compare two string’s value are equal. No need to use the &lt;code class=&quot;highlighter-rouge&quot;&gt;String.equals()&lt;/code&gt; method.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;a string&#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;a string&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Please try to modified the &lt;code class=&quot;highlighter-rouge&quot;&gt;==&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;!=&lt;/code&gt;, you can see a more powerful assert in Groovy which I love the most. As you see there’s no semicolon at the end of the line. This becomes not necessary in Groovy.&lt;/p&gt;

&lt;p&gt;Any Groovy expression can be interpolated in all string literals, apart from single and triple single quoted strings. This is a little bit like &lt;a href=&quot;https://www.perl.org/&quot;&gt;Perl&lt;/a&gt; and very useful when you process some text;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;Rex&#39;&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;greeting&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hello ${name}&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;greeting&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;Hello Rex&#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;collections&quot;&gt;Collections&lt;/h1&gt;
&lt;p&gt;Groovy also uses some Java collections. Groovy lists are plain JDK &lt;code class=&quot;highlighter-rouge&quot;&gt;java.util.List&lt;/code&gt; the default implementation are &lt;code class=&quot;highlighter-rouge&quot;&gt;java.util.ArrayList&lt;/code&gt;. It can also changed by using &lt;code class=&quot;highlighter-rouge&quot;&gt;as&lt;/code&gt;.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;List&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linkedList&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linkedList&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;linkedList&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;util&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;LinkedList&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can fast access a element in a list by its index. If use a negative index, it will count from the backend. Btw also can use a rang to access a list which really readable.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;numbers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;number&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Groovy creates maps are instances of &lt;code class=&quot;highlighter-rouge&quot;&gt;java.util.LinkedHashMap&lt;/code&gt; which a little like Spring map injection.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;info&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;Rex&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;age:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;name&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;Rex&#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Insert a element&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;gender&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;male&#39;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;gender&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;male&#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;closures&quot;&gt;Closures&lt;/h1&gt;
&lt;p&gt;A closure in Groovy is an anonymous, block of code that can pass in arguments and return a value. A little complex? Haha, let’s learn it from coding.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// Syntax&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;param&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;statements&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Try some simple&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Convert to upper case&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;convertToUpperCase&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toUpperCase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;convertToUpperCase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;rex&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;REX&#39;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// With 2 params&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// Varargs&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;concatString&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;-&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;concatString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;I&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Love&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;Groovy&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;I-Love-Groovy&#39;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;With closure we can try functional programming in Groovy.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;c1&quot;&gt;//This is an example for calculate the Fibonacci&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fib&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;//Need to define first or will throw MissingMethodException&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fib&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;n:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;assert&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6765&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// To make it execute fast can cache the former result by memoize()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;fib&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;n:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;memoize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h1 id=&quot;the-nuclear-boom-domain-specific-language&quot;&gt;The nuclear boom: Domain-Specific Language&lt;/h1&gt;
&lt;p&gt;The most powerful feature in Groovy should be the &lt;a href=&quot;https://en.wikipedia.org/wiki/Domain-specific_language&quot;&gt;DSL(Domain-Specific Language)&lt;/a&gt; support. Some modern building tools such as &lt;a href=&quot;http://gradle.org/&quot;&gt;Gradle&lt;/a&gt; are base on this. With this you can try to build your own language parser. The blow example comes from the official document from &lt;a href=&quot;http://www.groovy-lang.org/dsls.html&quot;&gt;groovy-lang&lt;/a&gt;, you can find more details from there.&lt;/p&gt;

&lt;p&gt;Now we create a DSL with the following structure&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;dsl-guru@mycompany.com&#39;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;john.doe@waitaminute.com&#39;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;The pope has resigned!&#39;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;Really, the pope has resigned!&#39;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then implementing such a builder is usually done the following way:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Closure&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EmailSpec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rehydrate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;email&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;resolveStrategy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Closure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;DELEGATE_ONLY&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;We also need to build the spec for a DSL and pass to the builder to execute&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;EmailSpec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;From: $from&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;To: $to&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;println&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Subject: $subject&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Closure&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bodySpec&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BodySpec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;rehydrate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bodySpec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;resolveStrategy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Closure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;DELEGATE_ONLY&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;code&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Then the type checker will know if an &lt;code class=&quot;highlighter-rouge&quot;&gt;email&lt;/code&gt; method accepting a Closure.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;nd&quot;&gt;@groovy.transform.TypeChecked&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;sendEmail&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;dsl-guru@mycompany.com&#39;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;john.doe@waitaminute.com&#39;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;subject&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;The pope has resigned!&#39;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;Really, the pope has resigned!&#39;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;It is magic right?&lt;/p&gt;

&lt;h1 id=&quot;some-other-useful-tools&quot;&gt;Some other useful tools&lt;/h1&gt;
&lt;p&gt;There are some useful tools build on Groovy. Let me take a short tour.&lt;/p&gt;

&lt;h4 id=&quot;gradle&quot;&gt;Gradle&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://gradle.org&quot;&gt;Gradle&lt;/a&gt; is a modern building tools. Now is the official recommend building tool for Android Developer. Gradle build on Groovy DSL, which is a better solution for construct building steps. To compare with Maven, with a Java plugin in Gradle, the build script can be like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-groovy&quot; data-lang=&quot;groovy&quot;&gt;&lt;span class=&quot;n&quot;&gt;apply&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;plugin:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;java&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;repositories&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;mavenCentral&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;compile&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;group:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;commons-collections&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;commons-collections&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;version:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;3.2&#39;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;testCompile&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;group:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;junit&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;name:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;junit&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;version:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;4.+&#39;&lt;/span&gt;  
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sourceCompatibility&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.5&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;1.0&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;jar&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;manifest&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;attributes&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;Implementation-Title&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;Gradle Project&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
               &lt;span class=&quot;s1&quot;&gt;&#39;implementation-Version&#39;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;h4 id=&quot;grails&quot;&gt;Grails&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;https://grails.org/index.html&quot;&gt;Grails&lt;/a&gt; is a powerful web framework which including integrated ORM, Domain-specific  Language, runtime and compile-time meta-programming and Asynchronous programming. If you want to develop a web application don’t forget to take a try with this.&lt;/p&gt;
</description>
        <pubDate>Sat, 12 Dec 2015 20:30:00 +0800</pubDate>
        <link>http://rex-zhou.github.io/2015/12/12/simple-groovy-guide.html</link>
        <guid isPermaLink="true">http://rex-zhou.github.io/2015/12/12/simple-groovy-guide.html</guid>
        
        
      </item>
    
      <item>
        <title>What could happen in 2 days!</title>
        <description>&lt;p&gt;As we know, &lt;a href=&quot;http://www.apple.com&quot;&gt;Apple&lt;/a&gt; realized their promise to make &lt;a href=&quot;https://swift.org&quot;&gt;Swift&lt;/a&gt; open source last weekend. Everybody can read its source code from &lt;a href=&quot;https://github.com/apple/swift&quot;&gt;GitHub&lt;/a&gt;. Not just on IOS platform such modern programming language could be used everywhere. I do know if you rewrite your IOS app in such language or have you read the source code of a programming language. But you really should know what happened in past 2-3 days.&lt;/p&gt;

&lt;p&gt;After I wrote this post, the Swift project in GitHub already &lt;em&gt;1,375 Watch&lt;/em&gt;, &lt;em&gt;20,122 Star&lt;/em&gt; and &lt;em&gt;2,330 Fork&lt;/em&gt;. There are already 53 Pull requests which mean already 3rd party developer contributed their source code to Swift. Maybe your next app will also contains individual coder’s function.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://rex-zhou.github.io/assets/swift_info.png&quot; alt=&quot;Swift Project Info&quot; /&gt;&lt;/p&gt;

&lt;p&gt;There is also already a swift package manager tool for using. Provided by Apple, you can also download from GitHub &lt;a href=&quot;https://github.com/apple/swift-package-manager&quot;&gt;Swift Package Manager&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The blue giant &lt;a href=&quot;http://www.ibm.com/us-en/&quot;&gt;IBM&lt;/a&gt; delivered the Swift sandbox on their bluemix. If you have no Mac OS you can also try this ‘new’ language on line. Also this sandbox still in beta version, but those great hackers put it online in a very short time. Be one of those hacker click &lt;a href=&quot;https://developer.ibm.com/swift/&quot;&gt;here&lt;/a&gt; to get involved. Maybe someday, you will bring next generation on the cloud in a flash.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://swiftlang.ng.bluemix.net/#/repl&quot;&gt;IBM Swift Sandbox&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If you want to run Swift on Linux platform, the complier for linux already online. Don’t hasted download those snapshot from &lt;a href=&quot;https://swift.org/download/#latest-development-snapshots&quot;&gt;this page&lt;/a&gt;. Then you can write your first hello world in a not-apple device. That’s really cool.&lt;/p&gt;

&lt;p&gt;I dear to say, more and more Swift program will comes out in the following week. That’s the power of open source. Everybody can get it, change it and bring their idea into real life. What most important thing is that every idea comes out in a very short time. Do like what a hacker doing. No more talk, just open your editor, let’s code;)&lt;/p&gt;
</description>
        <pubDate>Mon, 07 Dec 2015 20:30:00 +0800</pubDate>
        <link>http://rex-zhou.github.io/2015/12/07/what-could-happen-in-2-days.html</link>
        <guid isPermaLink="true">http://rex-zhou.github.io/2015/12/07/what-could-happen-in-2-days.html</guid>
        
        
      </item>
    
      <item>
        <title>How to build a small FX trading system</title>
        <description>&lt;p&gt;Last month just finished a trading game in my corp. From zero to one to build a trading system is a great experience. This post just a brief to make a trading system from zero to one. If you want to talk more, please contact me at the below link.&lt;/p&gt;

&lt;h3 id=&quot;what-is-a-trading-system&quot;&gt;What is a trading system&lt;/h3&gt;
&lt;p&gt;From &lt;a href=&quot;http://www.investopedia.com/university/tradingsystems/tradingsytems1.asp&quot;&gt;investopedia&lt;/a&gt; we can conclude that a trading system is a simply a group of specific rules, or parameters, that determine entry and exit point for a given equity. So we can infer that there are several point for a trading system.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Trading rules(the algorithm)&lt;/li&gt;
  &lt;li&gt;Signal&lt;/li&gt;
  &lt;li&gt;Execution system.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So your trading system need to be designed base on those above rules. You need watching the market data, analysis the data if it matches your algorithm, send the order to the exchange system and wait for the execution result and hold your position.&lt;/p&gt;

&lt;h3 id=&quot;some-basic-info-for-fx-trading&quot;&gt;Some basic info for FX trading&lt;/h3&gt;
&lt;p&gt;Before you setup your system, there are some basic terminology you should know.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The &lt;a href=&quot;http://www.investopedia.com/terms/c/currencypair.asp&quot;&gt;currency pair&lt;/a&gt;. This is the quotation and pricing structure of the currencies traded in the forex market. For example USD/CHF, the first currency of a currency pair is called the “base currency”, and the second currency is called the “quote currency”.&lt;/li&gt;
  &lt;li&gt;The &lt;a href=&quot;http://www.investopedia.com/terms/p/position.asp&quot;&gt;position&lt;/a&gt;. The amount of a symbol(such as USD/CHF) either owned(long position) or borrowed(short position).&lt;/li&gt;
  &lt;li&gt;The &lt;a href=&quot;http://www.investopedia.com/terms/t/take-profitorder.asp&quot;&gt;take profit order&lt;/a&gt;. An order to close out current position for a profit.&lt;/li&gt;
  &lt;li&gt;The &lt;a href=&quot;http://www.investopedia.com/terms/s/stop-lossorder.asp&quot;&gt;stop loss order&lt;/a&gt;. An order to limit the current position in a security.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;pick-up-your-tech-stack-and-write-your-program&quot;&gt;Pick up your tech stack and write your program&lt;/h3&gt;
&lt;p&gt;First of all, choose an environment to host your program. Because the game hold in my crop are based on the cloud platform &lt;a href=&quot;https://www.cloudfoundry.org/&quot;&gt;CloudFoundry&lt;/a&gt;. So my program was built on this &lt;a href=&quot;https://en.wikipedia.org/wiki/Platform_as_a_service&quot;&gt;PaaS&lt;/a&gt; platform. Make sure your hosting support the programming language you choose, if you got your own virtual server that you can build the runtime you like.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Market Watching System&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I use JAVA to build this system, the total system integrated by the &lt;a href=&quot;http://spring.io/&quot;&gt;spring-framework&lt;/a&gt;. I recommend the spring-boot tools to build your system’s prototype which really really fast to integrate the service you need. To receive the &lt;a href=&quot;http://www.investopedia.com/terms/t/tick.asp&quot;&gt;ticks&lt;/a&gt; from the exchange or the market you may need a websocket client service. If your exchange or market dose not provide a websocket feed. Then you need to build a socket server yourself. Using a 3rd party library can reduce the time you talk to native socket APIs. &lt;a href=&quot;http://netty.io/&quot;&gt;Netty&lt;/a&gt; would be helpful if you using JAVA.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Algo System&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After you set up your market watching system. Before you start you trading, you need to manage the market data. Data from the market are discrete, create a market data management system is necessary. Keep the market in your cache, if you got a database system, you can also put them in the database. From a period of market data. You can calculate some indicator that will trigger a &lt;a href=&quot;http://www.investopedia.com/terms/t/technicalanalysis.asp&quot;&gt;Singal&lt;/a&gt; to your main program.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Order System&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The order system used to execution an order which triggered by your algorithm engine. This system will send the order to the exchange and also your order book. You order book keeps all the order that generate from your algorithm. If it got the &lt;code class=&quot;highlighter-rouge&quot;&gt;ACK&lt;/code&gt; from the exchange, the order system need to remove the order from the order book automatic. And the order will sync to your position system.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Position System&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The position system plays very import part in your trading system. It shows the current profit and lost in your trading system. It will trigger the take profit order or stop loss order. So the system need to integrate with your all your others system.&lt;/p&gt;
</description>
        <pubDate>Sun, 29 Nov 2015 15:49:39 +0800</pubDate>
        <link>http://rex-zhou.github.io/2015/11/29/simply-trading-system.html</link>
        <guid isPermaLink="true">http://rex-zhou.github.io/2015/11/29/simply-trading-system.html</guid>
        
        
      </item>
    
      <item>
        <title>Pragmatic Programmer</title>
        <description>&lt;p&gt;This article for those people who want to be more pragmatic in their daily life.
Most of the aspect mentioned below come from the real problem I meat in work. Those
just about some basic skill that a programmer should have, if you want more need
to find them yourself.&lt;/p&gt;

&lt;h3 id=&quot;an-editor&quot;&gt;An Editor&lt;/h3&gt;
&lt;p&gt;This is most important part in your daily working. You need to write your code,
process text, analysis the log and write the documents. Someone prefer to use an
IDE to write their code. That’s a really good habit for collaborate working. You can
easily import you coding standard configuration make sure all of your partner writing
code follow the same guideline.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.jetbrains.com/idea/&quot;&gt;IntelliJ IDEA&lt;/a&gt; One of the most powerful IDE. Great
designed for code refactor, code inception and lots of useful plugin.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://atom.io&quot;&gt;Atom&lt;/a&gt; A text editor developed by &lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt;. It
has thousands of open source packages, and you can also hacked it yourself.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://code.visualstudio.com/&quot;&gt;Visual Studio Code&lt;/a&gt; A light weight font-end text editor
 developed by Microsoft. Now it just supports Javascript and ASP.NET maybe more feature in the future version.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;www.vim.org&quot;&gt;Vim&lt;/a&gt; A must well used editor for back-end developer. It is hard to learn, but easy to use.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After you picked up your favorite editor, there are several steps need to concern.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Setup your favorite color theme, coding and font. Because you may need to type for a long time.&lt;/li&gt;
  &lt;li&gt;Setup your coding standard and plugin, make sure all of your environment follow the same guideline.&lt;/li&gt;
  &lt;li&gt;Be familiar with your editor’s keybindings. Don’t make your hand break your mind. You can easily add
 a line, drop a line, replace some code and so on.&lt;/li&gt;
  &lt;li&gt;Some editor well integrated with &lt;a href=&quot;http://www.git-scm.com/&quot;&gt;Git&lt;/a&gt;, make sure you know the meaning.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;version-control-system&quot;&gt;Version Control System&lt;/h3&gt;
&lt;p&gt;The &lt;a href=&quot;https://en.wikipedia.org/wiki/Version_control&quot;&gt;VCS&lt;/a&gt; not only for your code, also for your documents. Then you can
easily roll back to the former version or compare with the different version. Some of the documents type
such as word and excel are not suit for the VCS to compare, try the &lt;a href=&quot;http://daringfireball.net/projects/markdown/&quot;&gt;markdown&lt;/a&gt; file. Some of the above editors already support
the preview of the markdown file which are really great feature.&lt;/p&gt;

&lt;p&gt;I recommend &lt;a href=&quot;http://www.git-scm.com/&quot;&gt;GIT&lt;/a&gt; as the default VCS. If you do not know how to use it
&lt;a href=&quot;http://try.github.com/&quot;&gt;this online guide&lt;/a&gt; can give you a short view on git. If you already a git
master &lt;a href=&quot;http://www.git-scm.com/book/en/v2&quot;&gt;this free book&lt;/a&gt; can also give you more info about it.&lt;/p&gt;

&lt;h3 id=&quot;the-programming-language&quot;&gt;The Programming Language&lt;/h3&gt;
&lt;p&gt;It is necessary to master a language in your work. Make sure you know the language feature in different version.
If it is a &lt;a href=&quot;https://en.wikipedia.org/wiki/Object-oriented_programming&quot;&gt;object-oriented&lt;/a&gt; language, you also need
to know some OOP design principle. Here’s a check list please make sure you already take in charge of it.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The language standard library(Data structure, File, Network, Thread model).&lt;/li&gt;
  &lt;li&gt;The language memory model(GC or manual allocated).&lt;/li&gt;
  &lt;li&gt;The common used third-party library(reduce the common mistake for build wheel.&lt;/li&gt;
  &lt;li&gt;The common used data structure of the language(collections, hashtable).&lt;/li&gt;
  &lt;li&gt;The I/O library(Also the network).&lt;/li&gt;
  &lt;li&gt;The common used algo that already contains in the standard library(Binary search, sorting).&lt;/li&gt;
  &lt;li&gt;The &lt;a href=&quot;http://www.oodesign.com/&quot;&gt;design pattern&lt;/a&gt; used for the language.&lt;/li&gt;
  &lt;li&gt;Try to make it reactive(http://www.reactivemanifesto.org/).&lt;/li&gt;
  &lt;li&gt;Having a toolkit that you can fast build a system from zero(&lt;a href=&quot;http://projects.spring.io/spring-boot/&quot;&gt;Spring-Boot&lt;/a&gt;).&lt;/li&gt;
  &lt;li&gt;The testing framework(&lt;em&gt;really import&lt;/em&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;a-second-language-for-your-daily-job&quot;&gt;A second language for your daily job.&lt;/h4&gt;
&lt;p&gt;Sometimes we need to process some data in a very short time or to build up a tiny
system to do some testing job. Then we need a language that can solve the problem very quickly.
&lt;a href=&quot;https://www.python.org/&quot;&gt;Python&lt;/a&gt;, &lt;a href=&quot;http://rubyonrails.org/&quot;&gt;Ruby&lt;/a&gt; and &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node&lt;/a&gt; have some
magic to help you do those things. Then you need to know:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;How to build a web server.&lt;/li&gt;
  &lt;li&gt;How to build a RESTful services.&lt;/li&gt;
  &lt;li&gt;How to manipulate and export data from database.&lt;/li&gt;
  &lt;li&gt;How to process CSV file.&lt;/li&gt;
  &lt;li&gt;How to process XML file.&lt;/li&gt;
  &lt;li&gt;How to process JSON data file.&lt;/li&gt;
  &lt;li&gt;How to process your log file.&lt;/li&gt;
  &lt;li&gt;How to simulate network request and response for testing.&lt;/li&gt;
  &lt;li&gt;How to fetch data from internet or web page.&lt;/li&gt;
  &lt;li&gt;Regular Expression(&lt;em&gt;It is ok to put it here?&lt;/em&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;the-operation-system&quot;&gt;The Operation System&lt;/h3&gt;
&lt;p&gt;No matter what operation system(Windows, Linux, Unix, Mac OS) you are using. Better to know some basic knowledge
 about it. Make sure you can handle some problem yourself. Such as setup your account, install and remove software.
 Know some benchmark of your system such as memory usage, CPU usage, network I/O usage. There’s a must know list below:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A shell for your OS(&lt;a href=&quot;https://technet.microsoft.com/en-us/library/bb978526.aspx&quot;&gt;Power shell&lt;/a&gt; for Windows. &lt;a href=&quot;https://en.wikipedia.org/wiki/Bash_%28Unix_shell%29&quot;&gt;Bash&lt;/a&gt; for *nix).&lt;/li&gt;
  &lt;li&gt;System diagnosis command(&lt;code class=&quot;highlighter-rouge&quot;&gt;top&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;ifconig&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;netstat&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;df&lt;/code&gt;…).&lt;/li&gt;
  &lt;li&gt;File and directory manipulating command(&lt;code class=&quot;highlighter-rouge&quot;&gt;rm&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;mkdir&lt;/code&gt;,&lt;code class=&quot;highlighter-rouge&quot;&gt;chmod&lt;/code&gt;…).&lt;/li&gt;
  &lt;li&gt;File watching command(&lt;code class=&quot;highlighter-rouge&quot;&gt;more&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;less&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;tail&lt;/code&gt;…).&lt;/li&gt;
  &lt;li&gt;File process command(&lt;code class=&quot;highlighter-rouge&quot;&gt;sed&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;awk&lt;/code&gt;).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of the above skill just make sure you have basic knowledge for being a programmer. But you still need
to do more to make you outstanding.&lt;/p&gt;

&lt;h3 id=&quot;whats-next&quot;&gt;What’s Next&lt;/h3&gt;
&lt;p&gt;I know, some of you already good at all the mentioned above. You still want more right? Ok I will show you more
about what I think necessary for a pragmatic programmer should have.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A Web developing framework from front to back-end. This will help to build some useful tools for yourself. Now web is
not just a website, it more like a app. You can also use it in your mobile device by responsive design. I recommend &lt;a href=&quot;https://www.djangoproject.com/&quot;&gt;Django&lt;/a&gt; for python, &lt;a href=&quot;http://rubyonrails.org/&quot;&gt;Rails&lt;/a&gt; for ruby, &lt;a href=&quot;http://expressjs.com/&quot;&gt;Express&lt;/a&gt; for node, &lt;a href=&quot;http://spring.io/&quot;&gt;Spring-MVC&lt;/a&gt; for java. Just use it and improve it. Do not hate it.&lt;/li&gt;
  &lt;li&gt;A &lt;a href=&quot;https://en.wikipedia.org/wiki/Continuous_integration&quot;&gt;continuous integration&lt;/a&gt; system. Most of the time a programmer need to work with others. So the collaboration is really import. To make your software need to make it earlier integrate and earlier test. A CI system will really help you to do that job. &lt;a href=&quot;https://www.jetbrains.com/teamcity/&quot;&gt;TeamCity&lt;/a&gt; and &lt;a href=&quot;https://travis-ci.org/&quot;&gt;Travis CI&lt;/a&gt; are really good at it.&lt;/li&gt;
  &lt;li&gt;Software developing method. No matter you are using waterfall or agile. You need know how to run them unless you are the single soldier.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To be a pragmatic programmer is a very hard road. You need to practice every day and try many different ways. If you have more advice for it. An email is welcome. Hope you enjoy this article. :)&lt;/p&gt;
</description>
        <pubDate>Mon, 23 Nov 2015 02:49:39 +0800</pubDate>
        <link>http://rex-zhou.github.io/2015/11/23/Pragmatic-Programmer.html</link>
        <guid isPermaLink="true">http://rex-zhou.github.io/2015/11/23/Pragmatic-Programmer.html</guid>
        
        
      </item>
    
      <item>
        <title>EPAM Hackfest!</title>
        <description>&lt;p&gt;It was very great experience to join the &lt;a href=&quot;www.epam.com&quot;&gt;EPAM&lt;/a&gt; hackfest last week. &lt;a href=&quot;https://en.wikipedia.org/wiki/Hackathon&quot;&gt;Hackfest&lt;/a&gt; (also called hackathon) is an event that need to coding for 24 hours to make a product. The most challenge thing is to build a software or a demo in limited time.&lt;/p&gt;

&lt;p&gt;This event was hold in ShenZhen nice place for those who want to build their career. It was my first time to join such activity so I went there alone. But if you got team and it will bring you very different experience. The match ground looks like an internet company, it provided the free wifi, food, drink, bathroom and the beer!&lt;/p&gt;

&lt;p&gt;The hackfest began with a great lecture hold by &lt;a href=&quot;www.epam.com&quot;&gt;EPAM&lt;/a&gt; they showed you what hackathon looks like and how to get succeed in the match（actually it works).&lt;/p&gt;

&lt;p&gt;We made a team there one big guy from Bay Area was data scientist of &lt;a href=&quot;www.facebook.com&quot;&gt;Facebook&lt;/a&gt; another guy is a self employee and good at javascript programming. The fourth buddy left us due to we still not got the idea for what we are going to do after the match started 2 hours ago. So the most important thing for the event is an idea, if you got a great idea you already won half of the match. After the brain storm with my teammates we determine to build a tool help us to hack the hackathon. If it not win the match we still could use it for next time.&lt;/p&gt;

&lt;p&gt;The coding activity lasted for 20 hours about 1 days. Around the middle night of the 1st day, they run out of free coke. Many people went to sleep, just few buddy still debug there code. And we already build a prototype for our program, but the data still a big problem. We tried many kind of ways to download the history hackathon data. But still so hard to analysis. Finally our big guy found a useful tool called &lt;a href=&quot;https://import.io&quot;&gt;Import.io&lt;/a&gt; to fetch the data. The data already sorted and classified by the tool. And we could analysis the data and draw the chart.&lt;/p&gt;

&lt;p&gt;All the participants need to push their code to the &lt;a href=&quot;https://github.com&quot;&gt;GitHub&lt;/a&gt; for final judgement. Before the presentation we keep on clicking the ‘refesh’ button on our web broswer because of the unstable wifi. But it worse less. Nothing could make sure everything goes well unless you have a backup plan. During the presentation we have to switch to the another pc because my laptop suddenly could not connect to our server.&lt;/p&gt;

&lt;p&gt;The result if less important right?&lt;/p&gt;

&lt;p&gt;The most important thing in the hackfest is coding for fun and what you learned from others. Ok, let’s cheer for the winner.&lt;/p&gt;

&lt;p&gt;Some tips for hackathon:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Coding for fun.&lt;/li&gt;
  &lt;li&gt;Challenge yourself.&lt;/li&gt;
  &lt;li&gt;Great idea&lt;/li&gt;
  &lt;li&gt;Your own tech stack&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;http://rex-zhou.github.io/assets/hackathon_1.jpg&quot; alt=&quot;Some pics from the hackfest&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://rex-zhou.github.io/assets/hackathon_2.jpg&quot; alt=&quot;Some pics from the hackfest&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://rex-zhou.github.io/assets/hackathon_3.jpg&quot; alt=&quot;Some pics from the hackfest&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 17 Nov 2015 04:30:00 +0800</pubDate>
        <link>http://rex-zhou.github.io/2015/11/17/epam-hackathon.html</link>
        <guid isPermaLink="true">http://rex-zhou.github.io/2015/11/17/epam-hackathon.html</guid>
        
        
      </item>
    
  </channel>
</rss>
